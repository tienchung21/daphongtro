import { useNavigate, useLocation } from 'react-router-dom';
import { useEffect, useState } from 'react';
import './NavigationChuDuAn.css';

// React Icons
import {
  HiOutlineChartBar,
  HiOutlineDocumentText,
  HiOutlineHome,
  HiOutlineCalendar,
  HiOutlineArrowTrendingUp,
  HiOutlineCog6Tooth
} from 'react-icons/hi2';

/**
 * Component Sidebar Navigation cho trang Ch·ªß d·ª± √°n
 * Design: Modern sidebar v·ªõi sections, badges, user profile
 * @returns {JSX.Element}
 */
function NavigationChuDuAn() {
  const navigate = useNavigate();
  const location = useLocation();
  const [isCollapsed, setIsCollapsed] = useState(false);
  const [isMobileOpen, setIsMobileOpen] = useState(false);

  const mainMenuItems = [
    {
      path: '/chu-du-an/dashboard',
      title: 'T·ªïng quan',
      icon: <HiOutlineChartBar />,
      description: 'Dashboard v√† th·ªëng k√™'
    },
    {
      path: '/chu-du-an/tin-dang',
      title: 'Tin ƒëƒÉng',
      icon: <HiOutlineDocumentText />,
      description: 'Qu·∫£n l√Ω tin ƒëƒÉng',
      badge: null // S·∫Ω hi·ªÉn th·ªã s·ªë tin ƒëƒÉng ch·ªù duy·ªát
    },
    {
      path: '/chu-du-an/du-an',
      title: 'D·ª± √°n',
      icon: <HiOutlineHome />,
      description: 'Danh s√°ch d·ª± √°n'
    },
    {
      path: '/chu-du-an/cuoc-hen',
      title: 'Cu·ªôc h·∫πn',
      icon: <HiOutlineCalendar />,
      description: 'L·ªãch xem ph√≤ng'
    }
  ];

  const reportMenuItems = [
    {
      path: '/chu-du-an/bao-cao',
      title: 'B√°o c√°o',
      icon: <HiOutlineArrowTrendingUp />,
      description: 'Ph√¢n t√≠ch hi·ªáu su·∫•t'
    },
    {
      path: '/chu-du-an/hop-dong',
      title: 'H·ª£p ƒë·ªìng',
      icon: <HiOutlineDocumentText />,
      description: 'Qu·∫£n l√Ω h·ª£p ƒë·ªìng'
    }
  ];

  const isActive = (path) => {
    if (path === '/chu-du-an/dashboard') {
      return location.pathname === path;
    }
    return location.pathname.startsWith(path);
  };

  const toggleSidebar = () => {
    setIsCollapsed(!isCollapsed);
  };

  const toggleMobile = () => {
    setIsMobileOpen((prev) => !prev);
  };

  // L·∫Øng nghe s·ª± ki·ªán global t·ª´ Header ƒë·ªÉ m·ªü/ƒë√≥ng sidebar tr√™n mobile
  useEffect(() => {
    const handler = () => setIsMobileOpen((prev) => !prev);
    window.addEventListener('cda:toggleSidebar', handler);
    return () => window.removeEventListener('cda:toggleSidebar', handler);
  }, []);

  return (
    <>
      {/* Mobile hamburger button */}
      <button
        className="cda-mobile-toggle"
        onClick={toggleMobile}
        aria-label={isMobileOpen ? 'ƒê√≥ng menu' : 'M·ªü menu'}
      >
        {isMobileOpen ? '‚úï' : '‚ò∞'}
      </button>

      {/* Overlay for mobile */}
      <div
        className={`cda-sidebar-overlay ${isMobileOpen ? 'active' : ''}`}
        onClick={() => setIsMobileOpen(false)}
      />

      <aside className={`cda-sidebar ${isCollapsed ? 'collapsed' : ''} ${isMobileOpen ? 'mobile-open' : ''}`}>
      {/* Header */}
      <div className="cda-sidebar-header">
        <div className="cda-brand">
          <div className="cda-brand-icon">üè¢</div>
          {!isCollapsed && (
            <div className="cda-brand-text">
              <div className="cda-brand-title">Ch·ªß d·ª± √°n</div>
              <div className="cda-brand-subtitle">Qu·∫£n l√Ω & Ph√°t tri·ªÉn</div>
            </div>
          )}
        </div>
        <button 
          className="cda-sidebar-toggle"
          onClick={toggleSidebar}
          title={isCollapsed ? 'M·ªü r·ªông' : 'Thu g·ªçn'}
        >
          {isCollapsed ? '‚Üí' : '‚Üê'}
        </button>
      </div>

      {/* User Profile */}
      {!isCollapsed && (
        <div className="cda-user-profile">
          <div className="cda-user-avatar">
            {(() => {
              const user = JSON.parse(localStorage.getItem('user') || '{}');
              const name = user.TenDayDu || user.tenDayDu || 'User';
              return name.charAt(0).toUpperCase();
            })()}
          </div>
          <div className="cda-user-info">
            <div className="cda-user-name">
              {(() => {
                const user = JSON.parse(localStorage.getItem('user') || '{}');
                return user.TenDayDu || user.tenDayDu || 'Ch·ªß d·ª± √°n';
              })()}
            </div>
            <div className="cda-user-role">
              {(() => {
                const user = JSON.parse(localStorage.getItem('user') || '{}');
                return user.TenVaiTro || user.vaiTro || 'Ch·ªß d·ª± √°n';
              })()}
            </div>
          </div>
        </div>
      )}

      {/* Main Navigation */}
      <nav className="cda-sidebar-nav">
        <div className="cda-nav-section">
          {!isCollapsed && <div className="cda-nav-section-title">Ch√≠nh</div>}
          <ul className="cda-nav-list">
            {mainMenuItems.map((item) => (
              <li key={item.path}>
                <button
                  className={`cda-nav-item ${isActive(item.path) ? 'active' : ''}`}
                  onClick={() => { navigate(item.path); setIsMobileOpen(false); }}
                  title={isCollapsed ? item.title : item.description}
                >
                  <span className="cda-nav-icon">{item.icon}</span>
                  {!isCollapsed && (
                    <>
                      <span className="cda-nav-label">{item.title}</span>
                      {item.badge && (
                        <span className="cda-nav-badge">{item.badge}</span>
                      )}
                    </>
                  )}
                </button>
              </li>
            ))}
          </ul>
        </div>

        <div className="cda-nav-section">
          {!isCollapsed && <div className="cda-nav-section-title">B√°o c√°o</div>}
          <ul className="cda-nav-list">
            {reportMenuItems.map((item) => (
              <li key={item.path}>
                <button
                  className={`cda-nav-item ${isActive(item.path) ? 'active' : ''}`}
                  onClick={() => { navigate(item.path); setIsMobileOpen(false); }}
                  title={isCollapsed ? item.title : item.description}
                >
                  <span className="cda-nav-icon">{item.icon}</span>
                  {!isCollapsed && <span className="cda-nav-label">{item.title}</span>}
                </button>
              </li>
            ))}
          </ul>
        </div>
      </nav>

      {/* Quick Actions */}
      {!isCollapsed && (
        <div className="cda-quick-actions">
          <button 
            className="cda-quick-action-btn primary"
            onClick={() => navigate('/chu-du-an/tao-tin-dang')}
          >
            <HiOutlineDocumentText style={{ width: '18px', height: '18px' }} />
            <span>T·∫°o tin ƒëƒÉng</span>
          </button>
        </div>
      )}

      {/* Footer */}
      <div className="cda-sidebar-footer">
        <button 
          className="cda-footer-btn"
          onClick={() => navigate('/')}
          title="V·ªÅ trang ch·ªß"
        >
          <HiOutlineHome style={{ width: '20px', height: '20px' }} />
          {!isCollapsed && <span>Trang ch·ªß</span>}
        </button>
        <button 
          className={`cda-footer-btn ${location.pathname === '/cai-dat' ? 'active' : ''}`}
          onClick={() => navigate('/cai-dat')}
          title="C√†i ƒë·∫∑t"
        >
          <HiOutlineCog6Tooth style={{ width: '20px', height: '20px' }} />
          {!isCollapsed && <span>C√†i ƒë·∫∑t</span>}
        </button>
      </div>
    </aside>
    </>
  );
}

export default NavigationChuDuAn;