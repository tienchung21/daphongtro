/**
 * Modal Y√™u c·∫ßu M·ªü l·∫°i D·ª± √°n b·ªã Banned
 * Component: Form gi·∫£i tr√¨nh ƒë·ªÉ xin m·ªü l·∫°i d·ª± √°n
 */

import React, { useState } from 'react';
import { HiOutlineXMark, HiOutlineExclamationTriangle, HiOutlinePaperAirplane } from 'react-icons/hi2';
import './ModalYeuCauMoLaiDuAn.css';

const ModalYeuCauMoLaiDuAn = ({ isOpen, onClose, onSubmit, duAn }) => {
  const [noiDungGiaiTrinh, setNoiDungGiaiTrinh] = useState('');
  const [error, setError] = useState(null);
  const [isSubmitting, setIsSubmitting] = useState(false);

  // Validation
  const validate = () => {
    if (!noiDungGiaiTrinh.trim()) {
      setError('N·ªôi dung gi·∫£i tr√¨nh kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng');
      return false;
    }
    if (noiDungGiaiTrinh.trim().length < 50) {
      setError('N·ªôi dung gi·∫£i tr√¨nh ph·∫£i c√≥ √≠t nh·∫•t 50 k√Ω t·ª± ƒë·ªÉ gi·∫£i th√≠ch r√µ l√Ω do');
      return false;
    }
    if (noiDungGiaiTrinh.length > 2000) {
      setError('N·ªôi dung gi·∫£i tr√¨nh kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 2000 k√Ω t·ª±');
      return false;
    }
    return true;
  };

  // Handle submit
  const handleSubmit = async (e) => {
    e.preventDefault();
    setError(null);

    if (!validate()) {
      return;
    }

    setIsSubmitting(true);

    try {
      await onSubmit(duAn.DuAnID, noiDungGiaiTrinh.trim());
      // Reset form v√† ƒë√≥ng modal
      setNoiDungGiaiTrinh('');
      onClose();
    } catch (err) {
      setError(err.response?.data?.message || err.message || 'L·ªói khi g·ª≠i y√™u c·∫ßu');
    } finally {
      setIsSubmitting(false);
    }
  };

  if (!isOpen || !duAn) return null;

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className="modal-content modal-yeu-cau" onClick={(e) => e.stopPropagation()}>
        {/* Header */}
        <div className="modal-header modal-header-warning">
          <div className="modal-header-icon">
            <HiOutlineExclamationTriangle />
          </div>
          <h2 className="modal-title">Y√™u c·∫ßu M·ªü l·∫°i D·ª± √°n</h2>
          <button className="modal-close-btn" onClick={onClose}>
            <HiOutlineXMark />
          </button>
        </div>

        {/* Body */}
        <div className="modal-body">
          {/* Th√¥ng tin b·ªã banned */}
          <div className="banned-info-section">
            <h3 className="section-title">üìã Th√¥ng tin Ng∆∞ng ho·∫°t ƒë·ªông</h3>
            
            <div className="info-row">
              <span className="info-label">D·ª± √°n:</span>
              <span className="info-value">{duAn.TenDuAn}</span>
            </div>

            <div className="info-row">
              <span className="info-label">L√Ω do ng∆∞ng:</span>
              <div className="info-value info-value-danger">
                {duAn.LyDoNgungHoatDong || 'Kh√¥ng c√≥ th√¥ng tin'}
              </div>
            </div>

            <div className="info-row">
              <span className="info-label">Th·ªùi gian:</span>
              <span className="info-value">
                {duAn.NgungHoatDongLuc
                  ? new Date(duAn.NgungHoatDongLuc).toLocaleString('vi-VN')
                  : 'N/A'}
              </span>
            </div>

            {duAn.NguoiNgungHoatDong_TenDayDu && (
              <div className="info-row">
                <span className="info-label">Ng∆∞·ªùi x·ª≠ l√Ω:</span>
                <span className="info-value">{duAn.NguoiNgungHoatDong_TenDayDu}</span>
              </div>
            )}
          </div>

          {/* Form gi·∫£i tr√¨nh */}
          <form onSubmit={handleSubmit}>
            <div className="form-group">
              <label className="form-label required">
                N·ªôi dung gi·∫£i tr√¨nh (t·ªëi thi·ªÉu 50 k√Ω t·ª±)
              </label>
              <textarea
                className={`form-textarea ${error ? 'error' : ''}`}
                value={noiDungGiaiTrinh}
                onChange={(e) => {
                  setNoiDungGiaiTrinh(e.target.value);
                  setError(null);
                }}
                placeholder="Vui l√≤ng gi·∫£i tr√¨nh chi ti·∫øt l√Ω do vi ph·∫°m ƒë√£ ƒë∆∞·ª£c kh·∫Øc ph·ª•c nh∆∞ th·∫ø n√†o, v√† cam k·∫øt tu√¢n th·ªß quy ƒë·ªãnh trong t∆∞∆°ng lai..."
                rows={6}
                maxLength={2000}
                disabled={isSubmitting}
              />
              <div className="textarea-footer">
                <span className={`char-count ${noiDungGiaiTrinh.length < 50 ? 'warning' : 'success'}`}>
                  {noiDungGiaiTrinh.length} / 2000 k√Ω t·ª±
                  {noiDungGiaiTrinh.length < 50 && ` (c√≤n thi·∫øu ${50 - noiDungGiaiTrinh.length})`}
                </span>
              </div>
              {error && <span className="error-text">{error}</span>}
            </div>

            {/* Warning notice */}
            <div className="warning-notice">
              <HiOutlineExclamationTriangle className="icon" />
              <div className="warning-content">
                <strong>L∆∞u √Ω quan tr·ªçng:</strong>
                <ul>
                  <li>Y√™u c·∫ßu s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω trong v√≤ng <strong>3-5 ng√†y l√†m vi·ªác</strong></li>
                  <li>Vui l√≤ng gi·∫£i tr√¨nh r√µ r√†ng, trung th·ª±c ƒë·ªÉ tƒÉng kh·∫£ nƒÉng ƒë∆∞·ª£c ch·∫•p nh·∫≠n</li>
                  <li>N·∫øu b·ªã t·ª´ ch·ªëi, b·∫°n c√≥ th·ªÉ g·ª≠i y√™u c·∫ßu m·ªõi sau khi kh·∫Øc ph·ª•c tri·ªát ƒë·ªÉ</li>
                </ul>
              </div>
            </div>

            {/* Footer */}
            <div className="modal-footer">
              <button
                type="button"
                className="btn btn-secondary"
                onClick={onClose}
                disabled={isSubmitting}
              >
                H·ªßy
              </button>
              <button
                type="submit"
                className="btn btn-primary btn-submit"
                disabled={isSubmitting || noiDungGiaiTrinh.trim().length < 50}
              >
                {isSubmitting ? (
                  '‚è≥ ƒêang g·ª≠i...'
                ) : (
                  <>
                    <HiOutlinePaperAirplane className="icon" />
                    G·ª≠i y√™u c·∫ßu
                  </>
                )}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default ModalYeuCauMoLaiDuAn;
