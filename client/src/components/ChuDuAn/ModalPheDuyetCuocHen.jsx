import React, { useState } from 'react';
import './ModalPheDuyetCuocHen.css';
import { HiOutlineCheck, HiOutlineXMark, HiOutlineClock, HiOutlineUser, HiOutlineHome, HiOutlineKey } from 'react-icons/hi2';
import { CuocHenService } from '../../services/ChuDuAnService';

/**
 * Modal Ph√™ duy·ªát Cu·ªôc h·∫πn
 * UC-PROJ-02: X√°c nh·∫≠n cu·ªôc h·∫πn (n·∫øu y√™u c·∫ßu)
 */
function ModalPheDuyetCuocHen({ cuocHen, onClose, onSuccess }) {
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState({
    phuongThucVao: cuocHen?.PhuongThucVao || '',
    ghiChu: ''
  });

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!formData.phuongThucVao.trim()) {
      alert('Vui l√≤ng nh·∫≠p h∆∞·ªõng d·∫´n v√†o d·ª± √°n');
      return;
    }

    try {
      setLoading(true);
      
      await CuocHenService.pheDuyet(
        cuocHen.CuocHenID, 
        formData.phuongThucVao, 
        formData.ghiChu
      );

      alert('‚úÖ ƒê√£ ph√™ duy·ªát cu·ªôc h·∫πn th√†nh c√¥ng!\nH·ªá th·ªëng ƒë√£ g·ª≠i th√¥ng b√°o cho kh√°ch h√†ng v√† nh√¢n vi√™n.');
      onSuccess();
    } catch (error) {
      console.error('L·ªói ph√™ duy·ªát:', error);
      alert('‚ùå C√≥ l·ªói x·∫£y ra: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const formatDate = (dateString) => {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleDateString('vi-VN', { 
      weekday: 'long',
      day: '2-digit', 
      month: '2-digit', 
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className="modal-content phe-duyet-modal" onClick={(e) => e.stopPropagation()}>
        {/* Header */}
        <div className="modal-header success">
          <div className="modal-header-content">
            <div className="modal-icon success">
              <HiOutlineCheck />
            </div>
            <div>
              <h2 className="modal-title">Ph√™ duy·ªát Cu·ªôc h·∫πn</h2>
              <p className="modal-subtitle">X√°c nh·∫≠n cu·ªôc h·∫πn #{cuocHen?.CuocHenID}</p>
            </div>
          </div>
          <button className="modal-close" onClick={onClose}>
            <HiOutlineXMark />
          </button>
        </div>

        {/* Body */}
        <div className="modal-body">
          {/* Th√¥ng tin cu·ªôc h·∫πn */}
          <div className="info-section">
            <h3 className="section-title">üìÖ Th√¥ng tin cu·ªôc h·∫πn</h3>
            <div className="info-grid">
              <div className="info-item">
                <HiOutlineClock className="info-icon" />
                <div>
                  <div className="info-label">Th·ªùi gian</div>
                  <div className="info-value">{formatDate(cuocHen?.ThoiGianHen)}</div>
                </div>
              </div>
              
              <div className="info-item">
                <HiOutlineUser className="info-icon" />
                <div>
                  <div className="info-label">Kh√°ch h√†ng</div>
                  <div className="info-value">{cuocHen?.TenKhachHang || 'N/A'}</div>
                  <div className="info-sub">{cuocHen?.SoDienThoaiKhach || 'N/A'}</div>
                </div>
              </div>
              
              <div className="info-item">
                <HiOutlineHome className="info-icon" />
                <div>
                  <div className="info-label">Ph√≤ng</div>
                  <div className="info-value">{cuocHen?.TenPhong || 'N/A'}</div>
                  <div className="info-sub">{cuocHen?.TenDuAn || 'N/A'}</div>
                </div>
              </div>
            </div>
          </div>

          {/* Form nh·∫≠p h∆∞·ªõng d·∫´n */}
          <form onSubmit={handleSubmit}>
            <div className="form-section">
              <h3 className="section-title">
                <HiOutlineKey className="section-icon" />
                H∆∞·ªõng d·∫´n v√†o d·ª± √°n
              </h3>
              <p className="section-description">
                Th√¥ng tin n√†y s·∫Ω ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông cho kh√°ch h√†ng qua SMS/Email
              </p>
              
              <div className="cda-form-group">
                <label className="cda-label cda-label-required">
                  Ph∆∞∆°ng th·ª©c v√†o d·ª± √°n
                </label>
                <textarea
                  className="cda-textarea"
                  rows="5"
                  placeholder="V√≠ d·ª•:&#10;‚Ä¢ M·∫≠t kh·∫©u c·ª≠a: 123456#&#10;‚Ä¢ L·∫•y ch√¨a kh√≥a t·∫°i: B·∫£o v·ªá t·∫ßng 1&#10;‚Ä¢ G·∫∑p nh√¢n vi√™n t·∫°i: S·∫£nh ch√≠nh l√∫c 14:00&#10;‚Ä¢ Li√™n h·ªá: 0909123456 (Anh Mai)"
                  value={formData.phuongThucVao}
                  onChange={(e) => setFormData({ ...formData, phuongThucVao: e.target.value })}
                  required
                />
                <div className="cda-help-text">
                  üí° H√£y cung c·∫•p th√¥ng tin chi ti·∫øt ƒë·ªÉ kh√°ch h√†ng d·ªÖ d√†ng t√¨m ƒë·∫øn ph√≤ng
                </div>
              </div>

              <div className="cda-form-group">
                <label className="cda-label">
                  Ghi ch√∫ th√™m (t√πy ch·ªçn)
                </label>
                <textarea
                  className="cda-textarea"
                  rows="3"
                  placeholder="Ghi ch√∫ n·ªôi b·ªô ho·∫∑c l∆∞u √Ω ƒë·∫∑c bi·ªát..."
                  value={formData.ghiChu}
                  onChange={(e) => setFormData({ ...formData, ghiChu: e.target.value })}
                />
              </div>
            </div>

            {/* Actions sau khi ph√™ duy·ªát */}
            <div className="auto-actions-info">
              <h4 className="auto-actions-title">‚úÖ H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông:</h4>
              <ul className="auto-actions-list">
                <li>‚úì C·∫≠p nh·∫≠t tr·∫°ng th√°i cu·ªôc h·∫πn th√†nh "ƒê√£ x√°c nh·∫≠n"</li>
                <li>‚úì G·ª≠i SMS/Email x√°c nh·∫≠n cho kh√°ch h√†ng v·ªõi h∆∞·ªõng d·∫´n v√†o d·ª± √°n</li>
                <li>‚úì Th√¥ng b√°o cho nh√¢n vi√™n b√°n h√†ng ƒë∆∞·ª£c ph√¢n c√¥ng</li>
                <li>‚úì T·∫°o nh·∫Øc nh·ªü tr∆∞·ªõc cu·ªôc h·∫πn 1 gi·ªù</li>
                <li>‚úì Ghi nh·∫≠n l·ªãch s·ª≠ thay ƒë·ªïi v√†o h·ªá th·ªëng</li>
              </ul>
            </div>

            {/* Footer Actions */}
            <div className="modal-footer">
              <button 
                type="button"
                className="cda-btn cda-btn-secondary" 
                onClick={onClose}
                disabled={loading}
              >
                <HiOutlineXMark />
                H·ªßy b·ªè
              </button>
              <button 
                type="submit"
                className="cda-btn cda-btn-success" 
                disabled={loading}
              >
                {loading ? (
                  <>
                    <div className="cda-spinner small"></div>
                    ƒêang x·ª≠ l√Ω...
                  </>
                ) : (
                  <>
                    <HiOutlineCheck />
                    X√°c nh·∫≠n ph√™ duy·ªát
                  </>
                )}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}

export default ModalPheDuyetCuocHen;
