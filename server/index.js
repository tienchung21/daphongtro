require('dotenv').config(); // Load .env file FIRST

const express = require('express');
const cors = require('cors');
const path = require('path');
const userRoutes = require('./routes/userRoutes');
const authRoutes = require('./routes/authRoutes');

// Routes t·ª´ local (Module Ch·ªß d·ª± √°n)
const chuDuAnRoutes = require('./routes/chuDuAnRoutes'); // API ch√≠nh cho Ch·ªß d·ª± √°n
const chinhSachCocRoutes = require('./routes/chinhSachCocRoutes'); // API Ch√≠nh s√°ch C·ªçc
const operatorRoutes = require('./routes/operatorRoutes'); // API Operator/Admin (Banned d·ª± √°n)
const geocodingRoutes = require('./routes/geocodingRoutes'); // Geocoding API

// Routes t·ª´ upstream
const tinDangRoutes = require('./routes/tinDangRoutes');
const khuVucRoutes = require('./routes/khuVucRoutes');
const yeuThichRoutes = require('./routes/yeuThichRoutes');
const sepayRoutes = require('./routes/sepayRoutes');
const transactionRoutes = require('./routes/transactionRoutes');

const sepaySync = require('./services/sepaySyncService');
const app = express();
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Debug middleware ƒë·ªÉ log t·∫•t c·∫£ requests
app.use((req, res, next) => {
  console.log(`${req.method} ${req.path} - ${new Date().toISOString()}`);
  next();
});

// Ph·ª•c v·ª• file static cho uploads (ƒë·ªÉ hi·ªÉn th·ªã ·∫£nh)
app.use('/uploads', express.static(path.join(__dirname, 'public/uploads')));

// ƒê·ªãnh nghƒ©a API
app.use('/api/users', userRoutes);
app.use('/api', authRoutes);

// API t·ª´ local (Module Ch·ªß d·ª± √°n)
app.use('/api/chu-du-an', chuDuAnRoutes); // API nghi·ªáp v·ª• ch·ªß d·ª± √°n theo ƒë·∫∑c t·∫£
app.use('/api/chu-du-an/chinh-sach-coc', chinhSachCocRoutes); // API Ch√≠nh s√°ch C·ªçc
app.use('/api/operator', operatorRoutes); // API Operator/Admin (UC-OPR-01, UC-OPR-02)
app.use('/api/geocode', geocodingRoutes); // Geocoding API (Nominatim)

// API t·ª´ upstream
app.use('/api/tindangs', tinDangRoutes); 
app.use('/api/khuvucs', khuVucRoutes);
app.use('/api/yeuthich', yeuThichRoutes);
app.use('/api/sepay', sepayRoutes);
app.use('/api/transactions', transactionRoutes); 

app.get('/', (req, res) => {
  res.send('API server ƒëang ch·∫°y - Module Ch·ªß d·ª± √°n + Upstream APIs');
});













app.listen(5000, () => {
  console.log('‚úÖ Server ch·∫°y t·∫°i http://localhost:5000');
  console.log('ÔøΩ JWT_SECRET:', process.env.JWT_SECRET ? '‚úÖ Loaded from .env' : '‚ö†Ô∏è Using fallback key');
  console.log('ÔøΩüìÅ Static files: http://localhost:5000/uploads');
  console.log('üîó API endpoints cho Ch·ªß d·ª± √°n (theo ƒë·∫∑c t·∫£ use cases):');
  console.log('   üìä Dashboard: GET /api/chu-du-an/dashboard');
  console.log('   üìù Tin ƒëƒÉng:');
  console.log('       - GET  /api/chu-du-an/tin-dang (Danh s√°ch)');
  console.log('       - POST /api/chu-du-an/tin-dang (T·∫°o m·ªõi)');
  console.log('       - GET  /api/chu-du-an/tin-dang/:id (Chi ti·∫øt)');
  console.log('       - PUT  /api/chu-du-an/tin-dang/:id (C·∫≠p nh·∫≠t)');
  console.log('       - POST /api/chu-du-an/tin-dang/:id/gui-duyet (G·ª≠i duy·ªát)');
  console.log('   üìÖ Cu·ªôc h·∫πn:');
  console.log('       - GET  /api/chu-du-an/cuoc-hen (Danh s√°ch)');
  console.log('       - POST /api/chu-du-an/cuoc-hen/:id/xac-nhan (X√°c nh·∫≠n)');
  console.log('   üìà B√°o c√°o: GET /api/chu-du-an/bao-cao-hieu-suat');
  console.log('   üè¢ D·ª± √°n: GET /api/chu-du-an/du-an');
  console.log('   üìã H·ª£p ƒë·ªìng: POST /api/chu-du-an/hop-dong/bao-cao');
  console.log('   üó∫Ô∏è Geocoding: POST /api/geocode (ƒê·ªãa ch·ªâ ‚Üí T·ªça ƒë·ªô)');
  console.log('üîó API endpoints t·ª´ upstream:');
  console.log('   üìù /api/tindangs, /api/khuvucs, /api/yeuthich');
  console.log('   üí∞ /api/sepay, /api/transactions');
  
  // Kh·ªüi ƒë·ªông job ƒë·ªìng b·ªô Sepay (sau 1 gi√¢y ƒë·ªÉ server ·ªïn ƒë·ªãnh)
  setTimeout(() => {
    sepaySync.startPolling(60 * 1000); // Poll m·ªói 60 gi√¢y
  }, 1000);
});
